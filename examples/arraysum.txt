-- source code from https://marz.utk.edu/my-courses/cosc230/book/example-risc-v-assembly-programs/#sum_of_an_integer_array
--
-- .section .text
-- .global arraysum
-- arraysum:
--     # a0 = int a[]
--     # a1 = int size
--     # t0 = ret
--     # t1 = i
--     li    t0, 0        # ret = 0
--     li    t1, 0        # i = 0
-- 1:  # For loop
--     bge   t1, a1, 1f   # if i >= size, break
--     slli  t2, t1, 2    # Multiply i by 4 (1 << 2 = 4)
--     add   t2, a0, t2   # Update memory address
--     lw    t2, 0(t2)    # Dereference address to get integer
--     add   t0, t0, t2   # Add integer value to ret
--     addi  t1, t1, 1    # Increment the iterator
--     j     1b           # Jump back to start of loop (1 backwards)
-- 1:
--     mv    a0, t0       # Move t0 (ret) into a0
--     ret                # Return via return address register
08000513
02000593
008000ef
0000006f
00000293
00000313
00b35e63
00231393
007503b3
0003a383
007282b3
00130313
fe9ff06f
00028513
00008067
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000001
00000001
00000002
00000003
00000005
00000008
0000000D
00000015
00000022
00000037
00000059
00000090
000000E9
00000179
00000262
000003DB
00000001
00000001
00000002
00000003
00000005
00000008
0000000D
00000015
00000022
00000037
00000059
00000090
000000E9
00000179
00000262
000003DB
